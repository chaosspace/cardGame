{"ast":null,"code":"var _jsxFileName = \"E:\\\\items\\\\cardgame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Card } from \"./component/card\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const item = [{\n    symbol: \"1\",\n    id: 1\n  }, {\n    symbol: \"2\",\n    id: 2\n  }, {\n    symbol: \"3\",\n    id: 3\n  }, {\n    symbol: \"4\",\n    id: 4\n  }, {\n    symbol: \"5\",\n    id: 5\n  }, {\n    symbol: \"6\",\n    id: 6\n  }, {\n    symbol: \"7\",\n    id: 7\n  }, {\n    symbol: \"8\",\n    id: 8\n  }];\n  const [cards, setCards] = useState({\n    item\n  });\n  const [firstC, setFirstC] = useState(null);\n  const [secondC, setSecondC] = useState(null);\n  //const [count, setCount] = useState();\n  function resetCards() {\n    let shuffled = [...item, ...item].sort(() => Math.random() - 0.5);\n    setCards({\n      item: shuffled\n    });\n  }\n  useEffect(() => {\n    resetCards();\n  }, []);\n  function handleSelection(e) {\n    firstC ? setSecondC(e.target.dataset.id) : setFirstC();\n    console.log(e.target.dataset.id);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: Array.from(cards.item).map((_ref, idx) => {\n        let {\n          symbol,\n          id\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          emoji: symbol,\n          id: id,\n          handleSelection: handleSelection\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cSm14vHHK6cwYN7IrrdztyxkxvM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Card","useEffect","App","item","symbol","id","cards","setCards","firstC","setFirstC","secondC","setSecondC","resetCards","shuffled","sort","Math","random","handleSelection","e","target","dataset","console","log","Array","from","map","idx"],"sources":["E:/items/cardgame/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Card } from \"./component/card\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const item = [\n    { symbol: \"1\", id: 1 },\n    { symbol: \"2\", id: 2 },\n    { symbol: \"3\", id: 3 },\n    { symbol: \"4\", id: 4 },\n    { symbol: \"5\", id: 5 },\n    { symbol: \"6\", id: 6 },\n    { symbol: \"7\", id: 7 },\n    { symbol: \"8\", id: 8 },\n  ];\n  const [cards, setCards] = useState({ item });\n  const [firstC,setFirstC] = useState(null)\n  const [secondC,setSecondC] = useState(null)\n  //const [count, setCount] = useState();\n  function resetCards() {\n    let shuffled = [...item, ...item].sort(() => Math.random() - 0.5);\n    setCards({ item: shuffled });\n  }\n\n  useEffect(() => {\n    resetCards();\n  }, []);\n  function handleSelection(e){\n    firstC ? setSecondC(e.target.dataset.id) : setFirstC();\n    console.log(e.target.dataset.id);\n  } \n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        {Array.from(cards.item).map(({symbol,id}, idx) => {\n          return <Card key={idx} emoji={symbol} id={id} handleSelection={handleSelection} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,OAAO;AAAC;AAElC,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,IAAI,GAAG,CACX;IAAEC,MAAM,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAE,CAAC,EACtB;IAAED,MAAM,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAE,CAAC,EACtB;IAAED,MAAM,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAE,CAAC,EACtB;IAAED,MAAM,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAE,CAAC,EACtB;IAAED,MAAM,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAE,CAAC,EACtB;IAAED,MAAM,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAE,CAAC,EACtB;IAAED,MAAM,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAE,CAAC,EACtB;IAAED,MAAM,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAE,CAAC,CACvB;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IAAEI;EAAK,CAAC,CAAC;EAC5C,MAAM,CAACK,MAAM,EAACC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM,CAACW,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC3C;EACA,SAASa,UAAU,GAAG;IACpB,IAAIC,QAAQ,GAAG,CAAC,GAAGV,IAAI,EAAE,GAAGA,IAAI,CAAC,CAACW,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IACjET,QAAQ,CAAC;MAAEJ,IAAI,EAAEU;IAAS,CAAC,CAAC;EAC9B;EAEAZ,SAAS,CAAC,MAAM;IACdW,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EACN,SAASK,eAAe,CAACC,CAAC,EAAC;IACzBV,MAAM,GAAGG,UAAU,CAACO,CAAC,CAACC,MAAM,CAACC,OAAO,CAACf,EAAE,CAAC,GAAGI,SAAS,EAAE;IACtDY,OAAO,CAACC,GAAG,CAACJ,CAAC,CAACC,MAAM,CAACC,OAAO,CAACf,EAAE,CAAC;EAClC;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,SAAS;MAAA,UACrBkB,KAAK,CAACC,IAAI,CAAClB,KAAK,CAACH,IAAI,CAAC,CAACsB,GAAG,CAAC,OAAcC,GAAG,KAAK;QAAA,IAArB;UAACtB,MAAM;UAACC;QAAE,CAAC;QACtC,oBAAO,QAAC,IAAI;UAAW,KAAK,EAAED,MAAO;UAAC,EAAE,EAAEC,EAAG;UAAC,eAAe,EAAEY;QAAgB,GAA7DS,GAAG;UAAA;UAAA;UAAA;QAAA,QAA6D;MACpF,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GApCQxB,GAAG;AAAA,KAAHA,GAAG;AAsCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}