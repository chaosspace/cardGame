{"ast":null,"code":"var _jsxFileName = \"E:\\\\items\\\\cardgame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Card } from \"./component/card\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const item = [{\n    symbol: \"1\",\n    id: 1,\n    matchFound: false\n  }, {\n    symbol: \"2\",\n    id: 2,\n    matchFound: false\n  }, {\n    symbol: \"3\",\n    id: 3,\n    matchFound: false\n  }, {\n    symbol: \"4\",\n    id: 4,\n    matchFound: false\n  }, {\n    symbol: \"5\",\n    id: 5,\n    matchFound: false\n  }, {\n    symbol: \"6\",\n    id: 6,\n    matchFound: false\n  }, {\n    symbol: \"7\",\n    id: 7,\n    matchFound: false\n  }, {\n    symbol: \"8\",\n    id: 8,\n    matchFound: false\n  }];\n  const [cards, setCards] = useState(item);\n  const [firstC, setFirstC] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const [secondC, setSecondC] = useState(null);\n  const [count, setCount] = useState(0);\n  const [moves, setMoves] = useState(0);\n  function resetCards() {\n    let shuffled = [...item, ...item].sort(() => Math.random() - 0.5);\n    setCards(shuffled);\n  }\n  function resetChoices() {\n    setFirstC(null);\n    setSecondC(null);\n    setMoves(pre => pre + 1);\n    setDisabled(false);\n  }\n  function handleSelection(e) {\n    firstC ? setSecondC(e.target.dataset.id) : setFirstC(e.target.dataset.id);\n  }\n  useEffect(() => {\n    //setDisabled(true);\n    if (!secondC) {\n      return;\n    }\n    if (firstC === secondC) {\n      setCards(pre => {\n        Array.from(pre).map(c => {\n          if (c.id == firstC) {\n            return {\n              ...c,\n              matchFound: true\n            };\n          } else {\n            return c;\n          }\n        });\n        resetChoices();\n        setCount(pre => pre + 1);\n      });\n    }\n    resetChoices();\n  }, [firstC, secondC]);\n  useEffect(() => {\n    resetCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: Array.from(cards).map((card, idx) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          disabled: disabled,\n          handleSelection: handleSelection\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fj/NoXWfuLIA9NWRE4X08/6H46Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Card","useEffect","App","item","symbol","id","matchFound","cards","setCards","firstC","setFirstC","disabled","setDisabled","secondC","setSecondC","count","setCount","moves","setMoves","resetCards","shuffled","sort","Math","random","resetChoices","pre","handleSelection","e","target","dataset","Array","from","map","c","card","idx"],"sources":["E:/items/cardgame/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Card } from \"./component/card\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const item = [\n    { symbol: \"1\", id: 1, matchFound: false },\n    { symbol: \"2\", id: 2, matchFound: false },\n    { symbol: \"3\", id: 3, matchFound: false },\n    { symbol: \"4\", id: 4, matchFound: false },\n    { symbol: \"5\", id: 5, matchFound: false },\n    { symbol: \"6\", id: 6, matchFound: false },\n    { symbol: \"7\", id: 7, matchFound: false },\n    { symbol: \"8\", id: 8, matchFound: false },\n  ];\n  const [cards, setCards] = useState( item );\n  const [firstC, setFirstC] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const [secondC, setSecondC] = useState(null);\n  const [count, setCount] = useState(0);\n  const [moves, setMoves] = useState(0);\n  function resetCards() {\n    let shuffled = [...item, ...item].sort(() => Math.random() - 0.5);\n    setCards( shuffled );\n  }\n  function resetChoices() {\n    setFirstC(null);\n    setSecondC(null);\n    setMoves((pre) => pre + 1);\n    setDisabled(false);\n  }\n  function handleSelection(e) {\n    firstC ? setSecondC(e.target.dataset.id) : setFirstC(e.target.dataset.id);\n  }\n  useEffect(() => {\n    //setDisabled(true);\n    if (!secondC) {\n      return;\n    }\n    if (firstC === secondC) {\n      setCards((pre) => {\n        Array.from(pre).map((c) => {\n          if (c.id == firstC) {\n            return { ...c, matchFound: true };\n          } else {\n            return c;\n          }\n        });\n        resetChoices();\n        setCount((pre) => pre + 1);\n      });\n    }\n    resetChoices()\n  }, [firstC, secondC]);\n\n  useEffect(() => {\n    resetCards();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        {Array.from(cards).map((card, idx) => {\n          return (\n            <Card\n              key={idx}\n              card={card}\n              disabled={disabled}\n              handleSelection={handleSelection}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}